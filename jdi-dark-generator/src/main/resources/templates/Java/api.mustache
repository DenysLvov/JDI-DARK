{{>licenseInfo}}
package {{package}};

import com.epam.http.annotations.ServiceDomain;
import com.epam.http.requests.RestMethod;
import com.epam.http.response.RestResponse;

{{#imports}}import {{import}};
{{/imports}}

{{>generatedAnnotation}}
{{#operations}}
@ServiceDomain(${domain})
public class {{classname}} {
  {{#operation}}

  /**
   * {{summary}}
   * {{notes}}
   {{#allParams}}
   * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
   {{/allParams}}
   {{#returnType}}
   * @return {{returnType}}
   {{/returnType}}
   * @throws ApiException if fails to make API call
   {{#isDeprecated}}
   * @deprecated
   {{/isDeprecated}}
  */
  {{#consumes}}
  {{#isDeprecated}}
  @Deprecated
  {{/isDeprecated}}
  @ContentType({{enumMedia}})
  {{#queryParams}}
  @QueryParameter(name = "{{paramName}}", value = {{{example}}})
  {{/queryParams}}
  {{#formParams}}
  @FormParameter(name = "{{paramName}}", value = {{{example}}})
  {{/formParams}}
  @{{httpMethod}}("{{path}}")
  public static RestMethod{{#returnType}}<{{returnType}}>{{/returnType}} {{operationId}}{{enumMedia}};
  {{/consumes}}
  {{^hasConsumes}}
  {{#isDeprecated}}
  @Deprecated
  {{/isDeprecated}}
  {{#queryParams}}
  @QueryParameter(name = "{{paramName}}", value = {{{example}}})
  {{/queryParams}}
  {{#formParams}}
  @FormParameter(name = "{{paramName}}", value = {{{example}}})
  {{/formParams}}
  @{{httpMethod}}("{{path}}")
  public static RestMethod{{#returnType}}<{{{returnType}}}>{{/returnType}} {{operationId}}{{enumMedia}};
  {{/hasConsumes}}
  {{/operation}}
}
{{/operations}}
